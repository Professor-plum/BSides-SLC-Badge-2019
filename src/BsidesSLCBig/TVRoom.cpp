#include "TVRoom.h"
#include "FlashReader.h"

const int ecx = TVx + 48;
const int ecy = TVy - 10;
const int poses[5][2] = {{48, 13}, {43, 25}, {35, 35}, {25, 43}, {13, 48}}; 


const uint8_t qrcode[] PROGMEM = { 
0xfe, 0x2e, 0x55, 0x12, 0x4b, 0xfc, 0x16, 0x83, 0x6d, 0x46, 0x90, 0x6e, 0x9a, 0x10, 0x32, 
0x74, 0xbb, 0x75, 0xfb, 0x7f, 0x2, 0x35, 0xdb, 0xa7, 0x71, 0xfd, 0x63, 0xae, 0xc1, 0x60, 
0x44, 0x7a, 0x1, 0x7, 0xfa, 0xaa, 0xaa, 0xaa, 0xaf, 0xe0, 0x2, 0x2d, 0x13, 0x53, 0x0, 
0xfb, 0xc1, 0xff, 0x93, 0x6d, 0x51, 0xaa, 0x12, 0x2, 0xf6, 0xe0, 0xcc, 0xf6, 0xf3, 0xaf, 
0x5f, 0xc4, 0x2a, 0x96, 0x69, 0xb3, 0xa5, 0xd2, 0x22, 0xcb, 0xf3, 0x11, 0x4, 0x5e, 0x59, 
0x8, 0x2b, 0xe, 0x36, 0xac, 0x0, 0x7e, 0x80, 0x9a, 0xce, 0x1f, 0x12, 0x29, 0xf9, 0x3e, 
0x92, 0xf5, 0xa7, 0x21, 0x46, 0x9, 0x0, 0x90, 0x52, 0xf8, 0x4d, 0xd5, 0xab, 0xaf, 0x3c, 
0x38, 0x85, 0xf1, 0x87, 0x69, 0x5d, 0xfb, 0x5a, 0xf9, 0xdf, 0xfe, 0x5, 0xf9, 0x4, 0x75, 
0xc, 0x63, 0xac, 0x5d, 0x6a, 0x6e, 0xab, 0xd7, 0xea, 0x53, 0x1c, 0x55, 0x13, 0xd9, 0x1d, 
0xbf, 0xed, 0xff, 0xe7, 0xf, 0xd4, 0x82, 0xb0, 0xf2, 0x74, 0xd2, 0xe7, 0x89, 0xd3, 0xa, 
0x4c, 0x64, 0xea, 0x22, 0x9f, 0x3d, 0x46, 0x42, 0x24, 0x5e, 0x8a, 0x34, 0x8, 0xe6, 0xff, 
0xd, 0x6b, 0x28, 0x7, 0x6d, 0x53, 0x35, 0xc5, 0x96, 0xdc, 0xbd, 0x16, 0xb3, 0x72, 0x3c, 
0x2e, 0xd, 0xe1, 0x47, 0x69, 0x91, 0x82, 0x58, 0xde, 0x70, 0x81, 0x2, 0xa9, 0x58, 0x1c, 
0xb, 0x2c, 0xf3, 0xe4, 0xe1, 0xbb, 0x87, 0xe9, 0xbf, 0x5e, 0xfd, 0x74, 0xfe, 0x80, 0x5f, 
0xc, 0x6b, 0x84, 0x7f, 0xfb, 0xb5, 0x6b, 0xa7, 0xeb, 0xd0, 0x4d, 0x6b, 0x1b, 0x1d, 0x17, 
0xba, 0x84, 0xef, 0x82, 0x1f, 0x95, 0xd5, 0x52, 0x24, 0x74, 0x2f, 0xae, 0xb8, 0xe1, 0xcd, 
0x4f, 0xb, 0x5, 0x93, 0x10, 0xb1, 0xaa, 0xcf, 0xea, 0x1b, 0x59, 0x71, 0x51, 0x0, 
 };

void TVRoom::refresh(Adafruit_ILI9341_STM *tft, unsigned long now){
  FR.blt("tv.raw", tft, 0, 0, 240, 320);
  out = false;
  redraw = true;
}

roomID TVRoom::update(Adafruit_ILI9341_STM *tft, unsigned long now){
  if ((ears[0] == 1) && (ears[1] == 2)) {//10:07
      wheel_set(C_TV, true);
      tft->fillRect(TVx, TVy, 8, 48, ILI9341_WHITE);
      tft->fillRect(TVx+56, TVy, 8, 48, ILI9341_WHITE);
      tft->fillRect(TVx+8, TVy, 48, 2, ILI9341_WHITE);
      tft->fillRect(TVx+8, TVy+46, 48, 2, ILI9341_WHITE);
      tft->drawBitmap(TVx+8, TVy+1, qrcode, 48, 45, ILI9341_BLACK, ILI9341_WHITE);
    }
    else {
      uint8_t noise[384];
      for (int i=0; i< sizeof(noise); ++i)
        noise[i] = random(256);
      tft->drawBitmap(TVx, TVy, noise, 64, 48, ILI9341_BLACK, ILI9341_WHITE);
    }
  if (redraw) {
    //tft->fillRect(ecx-48, ecy-48, 96, 48, tft->color565(165, 187, 116));
    FR.blt("tvback.raw", tft, ecx-48, ecy-48, 96, 48);
    tft->drawLine(ecx, ecy, ecx - poses[ears[0]][0], ecy - poses[ears[0]][1], ILI9341_DARKGREY);
    tft->drawLine(ecx, ecy, ecx + poses[ears[1]][0], ecy - poses[ears[1]][1], ILI9341_DARKGREY);
    redraw= false;
  }
  if (sho) {
    FR.blt("tvhint.raw", tft, 47, 35, 92, 60);
    sho =false;
  }

  if ((now % 1000) < 500)
    FR.blt("tvt.raw", tft, 13, 215, 14, 4);
  else
    tft->fillRect(13, 215, 14, 4, tft->color565(33, 33, 33));
  if (out) return R_MARKET;
  return R_NOCHANGE;
}
  
void TVRoom::touchDown(int x, int y) {
  if ((x > 208) && (y > 65))
    out = true;
  if ((x>48) && (y>36) && (x<140) && (y<96))
    sho = true;
  touchMove(x,y);
}
 
void TVRoom::touchMove(int x, int y) {
  if ((x>=TVx) && (x< (TVx + 96)) && (y > (ecy - 60)) && (y < ecy)) {
    redraw = true;
    int slope = 10*(x-ecx)/(y-ecy);
    if (slope < -20) ears[1]=0;
    else if (slope < -13) ears[1]=1;
    else if (slope < -8) ears[1]=2;
    else if (slope < -4) ears[1]=3;
    else if (slope < -1) ears[1]=4;
    else if (slope > 20) ears[0]=0;
    else if (slope > 13) ears[0]=1;
    else if (slope > 8) ears[0]=2;
    else if (slope > 4) ears[0]=3;
    else if (slope > 1) ears[0]=4;
  }
}


